AA <-file.choose()
BB <-read.xlss(file=AA)
BB <-read.xlsx(file=AA)
BB <-read.table(file=AA)
View(BB)
require(xlsx)
require(xlsx)
library("stats4", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("tools", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
install.packages(c("MASS", "mgcv", "rpart"))
install.packages("xlsx")
require(xlsx)
BB <-read.table(file=AA)
BB <-read.xlsx(file=AA)
BB <-read.xlsx(file=AA)
BB
AA
BB
BB<- read.csv(file=AA)
AA<-file.choose()
AA
BB <-read.csv(file=AA)
BB
BB<- read.csv(file=AA, header=FALSE,sep="/t")
BB<-read.csv(file=AA,header=FALSE,sep="/t")
BB
getwd()
ls
View(BB)
install.packages("xlsx")
AA <-file.choose()
BB<-read.csv()
aaa <-file.choose()
FAT <-read.csv(aaa)
FAT <-read.csv(file=aaa, header=TRUE, sep="/t")
getwd
getwd()
View(FAT)
FAT
attach(FAT)
TRUE FALSE TRUE
FAT[FAT$fat<25,c(2,3)]
FAT[FAT$fat>25,c("fat","sex")]
subset(FAT, select=fat,subset=fat<25,drop=TRUE)
with(FAT, fat[fat<25 & fat !=7.8])
SUM.N(n=4)
SUM.N(function(n)(n*(n+1)/2)
)
sum.sq(function(x){sum(x^2)}
)
sum.sq<-function(x){sum(x^2)}
sum.sq(x=3)
FAT
BB
install.packages("CARS2004")
install.packages("PASWR2")
library(PSAWR2)
library(PASWR2)
CARS2004
total.cars<-((cars*1000)/population)
total.cars<-((cars*1000)/population)
population[i]
attach(CARS2004)
total.cars<-((cars*1000)/population)
total.cars
death.rate<-((deaths/cars))
death.rate
OrderCars<-(CARS2004[order(death.rate)])
CARS2004$deathrate
CARS2004$deathrate<-death.rate
CARS2004$CarTotal<-total.cars
OrderCars<-(CARS2004[order(death.rate)])
OrderCars<-(CARS2004[order(deathrate)])
View(CARS2004)
attach(death.rate)
attach(deathrate)
death.rate
CARS2004$deathrate
OrderCars<-(CARS2004[order(deathrate)])
OrderCars<-(CARS2004[order(CARS2004$deathrate)])
OrderCars<-(CARS2004[order(CARS2004$deathrate)],)
OrderCars<-(CARS2004[order(deathrate)],)
OrderCars<-CARS2004[order(deathrate),]
OrderCars<-CARS2004[order(death.rate),]
OrderCars
barplot(OrderCars, main="Car Death Rate", xlab="Country Names", ylab="Death Rate")
death<-table(OrderCars, country)
death<-table(OrderCars$country)
death
death<-table(OrderCars$deathrate)
death
death<-table(CARS2004$deathrate)
death
death<-table(OrderCars$country)
death<-table(OrderCars$deathrate)
death
OrderCars
OrderCars[2:4]<-NULL
OrderCars
barplot(OrderCars, main="Car Death Rate", xlab="Country Names", ylab="Death Rate")
barplot(OrderCars$deathrate, main="Car Death Rate", xlab="Country Names", ylab="Death Rate")
barplot(OrderCars$deathrate, main="Car Death Rate", xlab=country, ylab="Death Rate")
barplot(OrderCars$deathrate, main="Car Death Rate", xlab="Country Names", ylab="Death Rate")
LowestKiller<-OrderCars[1]
LowestKiller
LowestKiller<-OrderCars$country[1]
LowestKiller
OrderCars[2:4]<-TRUE
OrderCars
OrderCars[1:2:3:4:5:6]
OrderCars[1:6]
OrderCars[1:5]
OrderCars[1:4]
OrderCars<-CARS2004[order(death.rate),]
OrderCars
OrderCars[3,5]<-NULL
OrderCars[3]<-NULL
OrderCars[5]<-NULL
OrderCars
OrderCars<-CARS2004[order(death.rate),]
OrderCars[3]<-NULL
OrderCars[4]<-NULL
OrderCars
plot(total.cars,population, main="Population vs Total Cars", xlab="Total Cars", ylab="Population")
plot(population,total.cars, main="Population vs Total Cars", xlab="Total Cars", ylab="Population")
plot(total.cars,population, main="Population vs Total Cars", xlab="Total Cars", ylab="Population", pch=200 )
plot(total.cars,population, main="Population vs Total Cars", xlab="Total Cars", ylab="Population", pch=19 )
plot(total.cars,population, main="Population vs Total Cars", xlab="Total Cars", ylab="Population", pch=4 )
PopVsTotCars<-plot(total.cars,population, main="Population vs Total Cars", xlab="Total Cars", ylab="Population", pch=4 )
PopsVsTotCars
PopVsTotCars<-plot(total.cars,population, main="Population vs Total Cars", xlab="Total Cars", ylab="Population", pch=4 )
plot(total.cars,population, main="Population vs Total Cars", xlab="Total Cars", ylab="Population", pch=4 )
attach()
attach(plot(total.cars,population, main="Population vs Total Cars", xlab="Total Cars", ylab="Population", pch=4 ))
plot(total.cars,population, main="Population vs Total Cars", xlab="Total Cars", ylab="Population", pch=4 )
fit<-lm(population ~ total.cars)
fit
abline(fit)
fit
adline(fit)<-FALSE
adline()
adline(NULL)
fit
plot(population,total.cars)
plot(total.cars, population)
plot(total.cars,population, main="Population vs Total Cars", xlab="Total Cars", ylab="Population", pch=4 )
lm(total.cars~population)
PopvsCarsModel<-lm(total.cars~population)
View(CARS2004)
View(CARS2004)
adline(PopvsCarsModel)
plot(total.cars,population, main="Population vs Total Cars", xlab="Total Cars", ylab="Population", pch=4 )
adline(PopvsCarsModel)
View(PopvsCarsModel)
lines(total.cars, PopvsCarsModel)
lines(total.cars, population)
lines(population, PopvsCarsModel)
plot(total.cars,population, main="Population vs Total Cars", xlab="Total Cars", ylab="Population", pch=4 )
lines(total.cars, PopvsCarsModel)
plot(total.cars,death.rate)
View(OrderCars)
> OrderCars<-CARS2004[order(death.rate),]
OrderCars<-CARS2004[order(death.rate),]
plot(total.cars,death.rate)
plot(death.rate,total.cars)
cor(death.rate, total.cars,method="spearman")
plot(log(death.rate),log(total.cars))
CarsVsDeath<-lm(death.rate~total.cars)
lines(CarsVsDeath)
lines(CarsVsDeath, death.rate)
lines(death.rate, CarsVsDeath)
lines(death.rate, total.cars)
CarsVsDeath<-lm(log(death.rate)~log(total.cars))
CarsVsDeath
adline(death.rate,total.cars)
adline(CarsVsDeath)
adline(lm(log(death.rate)~log(total.cars)))
adline(CarsVsDeath, col="blue")
abline(CarsVsDeath, col="blue")
CarsVsDeath
> plot(log(death.rate),log(total.cars))
plot(log(death.rate),log(total.cars))
abline(CarsVsDeath, col="blue")
CarsVsDeath<-lm(death.rate~total.cars, data=death.rate)
CarsVsDeath<-plot(log(death.rate),log(total.cars))
CarsVsDeath
fact(0)
load("~/Documents/R Studio Projects/ClassMondayFeb5th/fact.Data.RData")
y<-1
fact(0)
fact(-2)
else if (x<0){
print(dummie)
}
fact(3)
fact(12)
factorial(12)
fact(1)
fact(0)
if (x=0)
if (x==0)
{
y<-1
}
fact(1)
fact(0)
fact(1.2)
y<-(prod(x:1)*(x-floor(x))*gamma(x-floor(x)))
if (x==0)
{
y<-1
}
fact(2.2)
fact(1)
fact(1.3)
else if (x==0)
{
y<-1
}
fact(.9)
fact(2)
fact(4)
fact(1.1)
y<-prod(x:1)*(x-floor(x))*gamma(x-floor(x))
y<-prod(x:1)*(x-floor(x))*gamma(x-floor(x))
{
y<-prod(x:1)*(x-floor(x))*gamma(x-floor(x))
}
else if (x==0)
{
y<-1
}
else if (x<0)
{
print(dummie)
}
{
if((x %% 1) ==0)
{
y<-prod(x:1)
}
else if(x>0)
{
y<-prod(x:1)*(x-floor(x))*gamma(x-floor(x))
}
else if (x==0)
{
y<-1
}
else if (x<0)
{
print(dummie)
}
}
fact(2)
fact(3)
fact(2.2)
else if(x>0)
fact(8)
fact(2.0)
fact(2.1)
{
if((x %% 1) ==0)
{
y<-prod(x:1)
}
else if(x>0)
{
y<-prod(x:1)*(x-floor(x))*gamma(x-floor(x))
}
else if (x==0)
{
y<-1
}
else if (x<0)
{
print(dummie)
}
}
fact(12)
fact(1.2)
fact(1.2)
{
if((x %% 1)==0)
{
y<-prod(x:1)
}
else if((x%%1) != 0)
{
y<-prod(x:1)*(x-floor(x))*gamma(x-floor(x))
}
}
fact(1)
fact(0)
fact(1.2)
{
print(dummie)
}
dummie<-"You done Messed Up"
dummie<-"You done Messed Up"
fact(0)
fact(1.2)
fact<-function(x){
y<-1
for(i in 1:x)
{
if(x>0)
{
if((x %% 1)==0)
{
y<-prod(x:1)
}
else if((x%%1) != 0)
{
y<-(prod(x:1)*(x-floor(x))*gamma(x-floor(x)))
}
}
else if (x==0)
{
y<-1
}
else if (x<0)
{
print(dummie)
}
}
print(y)
}
fact(1)
fact(2)
fact(0)
fact(1.2)
factorial(1.2)
fact(-1)
save.image("~/Documents/R Studio Projects/ClassMondayFeb5th/Factorial,Corr,andBeta.RData")
