#HyperGeometric
dhyper(z,z,n,x)
z<-2
dhyper(z,z,n,x)
n<-4
x<-1
probXboyoutofN<-dbinom(x,n,.5)
probCheck<-
{
(.5^n)*n
}
#Geometric
n<-4
x<-1
probXGirlsBefore1Boy<-dgeom(3,.5)
probCheck2<-
{
.5^(n-x)*.5^(x)
}
#Negative Binomial
z<-2
prob2GirlsBefore2Boys<-dnbinom(z,n-1,.5)
probCheck3<-
{
.5^(n) * (n-1)^x
}
#HyperGeometric
dhyper(z,z,n,x)
dhyper(z,z,n,x)
dhyper(prob2GirlsBefore2Boys,z,n,x)
dhyper(prob2GirlsBefore2Boys,z,n,1)
#HyperGeometric
dhyper(z,prob2GirlsBefore2Boys,n,1)
dhyper(z,z,n,x)
dhyper(.5,z,n,x)
dhyper(2,z,n,x)
dhyper(2,.5,n,x)
dhyper(z,n,z,n)
probCheck4<-
{
.5^z
}
probCheck4
.5^z + z^.5
z^.5
(z^.5)/(n^z)
dhyper(z,n,x,n)
#HyperGeometric
dhyper(z,n,z,n)
dhyper(z,n,z,x)
dhyper(z,n,z,z)
dhyper(z,n,n,z)
dhyper(z,z,z,n)
dhyper(z,n,z,n)
dhyper(z,n,n,n)
dhyper(z,z,n,n)
dhyper(z,z,z,n)
dhyper(z,n,z,n)
5/16
6/16
7/16
3/8
#Entering Data for dataframe
names<-c("Peter","Mary","Ann","June","John","Kevin")
score<-c(100,91,90,83,100,89)
testing<-data.frame(names,score)
#Mean needed info
n<-length(score)
tScore<-sum(score)
meanScore<-(tScore/n)
#Checking To make sure Mean is true
mean(score)
#Median needed info
scoreOrganized<-(testing[order(testing$score),])
row.names(scoreOrganized)<-(scoreOrganized$names)
medianScore<-(
if(n %% 2==0)
{
(length(score))/2
}
)
#Checking to make sure median is true
median(scoreOrganized$score)
trueMedian<-median(scoreOrganized$score)
trueMedian
medianScore
View(testing)
medianScore<-(
if(n %% 2==0)
{
middleIndex<-(length(score))/2
high<-testing.score(middleIndex+1)
low<-testing.score(middleIndex-1)
print((high+low)/2)
}
else
{
middleIn<-length(score)/2
print(testing.score(middleIn))
}
)
testing
testing.score
score
medianScore<-(
if(n %% 2==0)
{
middleIndex<-(length(score))/2
high<-score(middleIndex+1)
low<-score(middleIndex-1)
print((high+low)/2)
}
else
{
middleIn<-length(score)/2
print(score(middleIn))
}
)
score(1)
medianScore<-(
if(n %% 2==0)
{
middleIndex<-(length(score))/2
high<-score[middleIndex+1]
low<-score[middleIndex-1]
print((high+low)/2)
}
else
{
middleIn<-length(score)/2
print(score[middleIn])
}
)
middleIndex<-(length(score))/2
middleIndex
medianScore<-(
if(n %% 2==0)
{
middleIndex<-(length(scoreOrganized))/2
high<-scoreOrganized[middleIndex+1]
low<-scoreOrganized[middleIndex-1]
print((high+low)/2)
}
else
{
middleIn<-length(scoreOrganized)/2
print(scoreOrganized[middleIn])
}
)
high<-scoreOrganized[middleIndex+1]
low<-scoreOrganized[middleIndex-1]
View(low)
View(high)
middleIndex<-(length(scoreOrganized))/2
middleIndex
middleIndex<-(length(score))/2
medianScore<-(
if(n %% 2==0)
{
middleIndex<-(length(score))/2
high<-scoreOrganized[middleIndex+1]
low<-scoreOrganized[middleIndex-1]
print((high+low)/2)
}
else
{
middleIn<-length(scoreOrganized)/2
print(scoreOrganized[middleIn])
}
)
View(scoreOrganized)
high<-scoreOrganized.score[middleIndex+1]
high<-scoreOrganized$score[middleIndex+1]
low<-scoreOrganized$score[middleIndex-1]
medianScore<-(
if(n %% 2==0)
{
middleIndex<-(length(score))/2
high<-scoreOrganized$score[middleIndex+1]
low<-scoreOrganized$score[middleIndex-1]
print((high+low)/2)
}
else
{
middleIn<-length(scoreOrganized)/2
print(scoreOrganized[middleIn])
}
)
trueMedian<-median(scoreOrganized$score)
trueMedian
medianScore<-(
if((n %% 2)==0)
{
middleIndex<-(length(score))/2
high<-scoreOrganized$score[middleIndex+1]
low<-scoreOrganized$score[middleIndex-1]
print((high+low)/2)
}
else
{
middleIn<-length(scoreOrganized)/2
print(scoreOrganized[middleIn])
}
)
medianScore
View(scoreOrganized)
low<-scoreOrganized$score[middleIndex-1]
low
medianScore<-(
if((n %% 2)==0)
{
middleIndex<-(length(score))/2
high<-scoreOrganized$score[middleIndex+1]
low<-scoreOrganized$score[middleIndex]
print((high+low)/2)
}
else
{
middleIn<-length(scoreOrganized)/2
print(scoreOrganized[middleIn])
}
)
